syntax = "proto3";

package verifying_verifiable_credentials;

option go_package = "github.com/BojanG99/Decentralized-Identitise-And-Verifiable-Credentials/protobuff;verifiable_credentials";
option java_package = "com.example.mobilnaaplikacija.pb.verify.verifiable_credentials";
option java_multiple_files = true;

service VerifiableCredentialService {
  rpc VerifyCredential(stream ClientMessage ) returns (stream ServerMessage);
}

message ServerMessage {
  oneof message{
    ServerHello sh = 1;
    VerifiableCredentialRequest sp = 2;
    ServerResponse sr = 3;
    Error err = 4;
  }
}

message ClientMessage {
  oneof message{
    ClientHello ch = 1;
    ClientAuthentication ca = 2;
    VerifiableCredentials vcs = 3;
    VerifiableCredential vc = 4;
    ClientResponse cr = 5;
    Error err = 6;
  }
}


message ClientHello {
  string didString = 1;
  string server_challange = 2;
  string rpc_key = 3;
}

message ServerHello {
  string didString = 1;

  string client_challange = 2;

  string completedChallange = 3;
  string keyUrl = 4;

  //  string keyProposal = 5;
  //  string salt = 6;

}

message ClientAuthentication {
  string completed_challange = 1;
  string key_url = 2;
  string pin = 3;
}

message VerifiableCredentialRequest{
  repeated string acceptableTypes = 1;
  repeated string acceptableDIDs = 2;
}

message ClientResponse {
  bool acceptCredentials = 1;
}

message ServerResponse {
  bool acceptCredentials = 1;
}

message VerifiableCredentials{
  repeated VerifiableCredential vcs = 1;
}

message VerifiableCredential {

  string id = 1;
  repeated string type = 2;
  string issuer = 3;
  string subject = 4;
  string issuanceDate = 5;
  string description = 6;
  map<string, string> claims = 7;
  map<string,string> proof = 8;
  map<string,string>clientProof = 9;

}

message Error {
  string errorMessage = 1;
}

