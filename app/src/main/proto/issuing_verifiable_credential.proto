syntax = "proto3";

package verifiable_credentials;

option go_package = "github.com/BojanG99/Decentralized-Identitise-And-Verifiable-Credentials/protobuff;verifiable_credentials";
option java_package = "com.example.mobilnaaplikacija.pb.verifiable_credentials";
option java_multiple_files = true;

service VerifiableCredentialService {
  rpc IssueCredential(stream ClientMessage) returns (stream ServerMessage);
}

message ServerMessage {
  oneof message{
    ServerHello sh = 1;
    ServerClaimsProposal sp = 2;
    VerifiableCredential vc = 3;
    Error err = 4;
  }
}

message ClientMessage {
  oneof message{
    ClientHello ch = 1;
    ClientAuthentication ca = 2;
    ClientResponse cr = 3;
    Error err = 4;
  }
}

message ClientHello {
  string didString = 1;
  string server_challange = 2;
  string rpc_key = 3;
}

message ServerHello {
  string didString = 1;

  string client_challange = 2;

  string completedChallange = 3;
  string keyUrl = 4;

//  string keyProposal = 5;
//  string salt = 6;

}

message ClientAuthentication {
  string completed_challange = 1;
  string key_url = 2;
  string pin = 3;
}

message ServerClaimsProposal {
  map<string, string> claims = 6;
}

message ClientResponse {
  bool acceptCredentials = 1;
}

message VerifiableCredential {

  string id = 1;
  repeated string type = 2;
  string issuer = 3;
  string subject = 4;
  string issuanceDate = 5;
  map<string, string> claims = 6;
  map<string,string> proof = 7;

}

message Error {
  string errorMessage = 1;
}

